{"version":3,"sources":["store/auth-slice.js","store/index.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css","components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css"],"names":["logoutTimer","localToken","localStorage","getItem","localIsLoggedIn","authSlice","createSlice","name","initialState","token","isLoggedIn","reducers","logout","state","removeItem","clearTimeout","login","action","payload","remainingTime","expirationTime","currentTime","Date","getTime","calculateRemainingTime","setItem","setTimeout","saveLoginToken","authActions","actions","store","configureStore","reducer","auth","MainNavigation","useSelector","dispatch","useDispatch","className","classes","header","to","logo","onClick","Layout","props","children","ProfileForm","authToken","history","useHistory","formValidation","Yup","shape","newPassword","min","submitHandler","values","setSubmitting","resetForm","a","axios","post","idToken","password","returnSecureToken","replace","errorMessage","response","data","error","message","alert","Error","initialValues","validationSchema","onSubmit","isSubmitting","errors","form","control","htmlFor","type","id","UserProfile","profile","AuthForm","useState","isLogin","setIsLogin","switchAuthModeHandler","prevState","formSquema","email","required","setIsSubmitting","url","expiresIn","toString","touched","toggle","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById","module","exports"],"mappings":"qKAIIA,E,yCAFEC,EAAaC,aAAaC,QAAQ,SAClCC,IAAoBH,EAYpBI,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAAc,CACVC,MAAOR,EACPS,WAAYN,GAEhBO,SAAU,CACNC,OADM,SACCC,GACHA,EAAMJ,MAAQ,GACdI,EAAMH,YAAa,EACnBR,aAAaY,WAAW,SACrBd,GACCe,aAAaf,IAGrBgB,MATM,SASAH,EAAOI,GACTJ,EAAMJ,MAAQQ,EAAOC,QAAQT,MAC7BI,EAAMH,YAAa,EACnB,IAAMS,EA3Ba,SAACC,GAC5B,IAAMC,GAAc,IAAIC,MAAOC,UAK/B,OAJ+B,IAAID,KAAKF,GAAgBG,UAELF,EAuBrBG,CAAuBP,EAAOC,QAAQE,gBAE5DlB,aAAauB,QAAQ,QAASR,EAAOC,QAAQT,OAC7CP,aAAauB,QAAQ,iBAAkBN,GAEvCnB,EAAc0B,YAAW,WACrBxB,aAAaY,WAAW,WACzBK,IAEPQ,eArBM,SAqBSd,EAAOI,GAClBJ,EAAMJ,MAAQQ,EAAOC,YAKpBU,EAAcvB,EAAUwB,QAEtBxB,IC3CAyB,EAJDC,YAAe,CACzBC,QAAS,CAAEC,KAAM5B,EAAU2B,W,+CCmChBE,EAjCQ,WACrB,IAAMxB,EAAayB,aAAY,SAACtB,GAAD,OAAWA,EAAMoB,KAAKvB,cAC/C0B,EAAWC,cAKjB,OACE,yBAAQC,UAAWC,IAAQC,OAA3B,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,qBAAKH,UAAWC,IAAQG,KAAxB,0BAEF,8BACE,gCACIhC,GACF,6BACE,cAAC,IAAD,CAAM+B,GAAG,QAAT,qBAED/B,GACD,6BACE,cAAC,IAAD,CAAM+B,GAAG,WAAT,uBAED/B,GACC,6BACA,wBAAQiC,QApBI,WACpBP,EAASR,EAAYhB,WAmBb,+BCjBGgC,EATA,SAACC,GACd,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,+BAAOA,EAAMC,e,2EC4DJC,EA7DK,WAClB,IAAMC,EAAYb,aAAY,SAACtB,GAAD,OAAWA,EAAMoB,KAAKxB,SAC9CwC,EAAUC,cAEVC,EAAiBC,MAAaC,MAAM,CACxCC,YAAaF,MACZG,IAAI,EAAG,2BAGJC,EAAa,uCAAG,WAAOC,EAAQC,EAAeC,GAA9B,eAAAC,EAAA,+EAEZC,IAAMC,KAAK,wGACf,CACAC,QAASf,EACTgB,SAAUP,EAAOH,YACjBW,mBAAmB,IANH,OASlBP,GAAc,GACdC,IACAV,EAAQiB,QAAQ,KAXE,sDAadC,EAAe,yBAEhB,KAAMC,UAAY,KAAMA,SAASC,MAAQ,KAAMD,SAASC,KAAKC,OAAS,KAAMF,SAASC,KAAKC,MAAMC,UACjGJ,EAAe,KAAMC,SAASC,KAAKC,MAAMC,SAG3CC,MAAML,GAENT,GAAc,GACdC,IACM,IAAIc,MAAMN,GAvBE,yDAAH,0DA4BnB,OACE,cAAC,IAAD,CACAO,cAAe,CAAEpB,YAAa,IAC9BqB,iBAAkBxB,EAClByB,SAAU,SAACnB,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCH,EAAcC,EAAQC,EAAeC,IAJvC,SAME,gBAAGkB,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAjB,OACA,eAAC,IAAD,CAAMxC,UAAWC,IAAQwC,KAAzB,UACE,sBAAKzC,UAAWC,IAAQyC,QAAxB,UACE,uBAAOC,QAAQ,eAAf,0BACA,cAAC,IAAD,CAAOC,KAAK,WAAWC,GAAG,eAAe5E,KAAK,gBAC7CuE,EAAOxB,YAAe,mBAAGhB,UAAU,QAAb,SAAsBwC,EAAOxB,cAAoB,QAE1E,sBAAKhB,UAAWC,IAAQtB,OAAxB,WACI4D,GAAgB,wBAAQK,KAAK,SAAb,6BACjBL,GAAgB,6D,iBChDZO,EATK,WAClB,OACE,0BAAS9C,UAAWC,IAAQ8C,QAA5B,UACE,mDACA,cAAC,EAAD,Q,yBC2GSC,EAxGE,WACf,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMrD,EAAWC,cACXY,EAAUC,cAEVwC,EAAwB,WAC5BD,GAAW,SAACE,GAAD,OAAgBA,MAGvBC,EAAaxC,MAAaC,MAAM,CACpCwC,MAAOzC,MACNyC,MAAM,iBACNC,SAAS,YAEV9B,SAAUZ,MACTG,IAAI,EAAG,+BACPuC,SAAS,cAGNtC,EAAa,uCAAG,WAAOC,EAAQE,EAAWoC,GAA1B,qBAAAnC,EAAA,6DAEhBoC,EAAM,GAERA,EADCR,EACG,oHAEA,wGANc,kBAUK3B,IAAMC,KAAKkC,EAChC,CACAH,MAAOpC,EAAOoC,MACd7B,SAAUP,EAAOO,SACjBC,mBAAmB,IAdH,OAUZG,EAVY,OAiBZhD,EAAiB,IAAIE,MAAK,IAAIA,MAAOC,UAAwC,KAA1B6C,EAASC,KAAK4B,WAEvE7D,EAASR,EAAYZ,MAAM,CAACP,MAAO2D,EAASC,KAAKN,QAAS3C,eAAgBA,EAAe8E,cAEzFH,GAAgB,GAChBpC,IAEAV,EAAQiB,QAAQ,KAxBE,wDA2BdC,EAAe,yBAChB,KAAMC,UAAY,KAAMA,SAASC,MAAQ,KAAMD,SAASC,KAAKC,OAAS,KAAMF,SAASC,KAAKC,MAAMC,UACjGJ,EAAe,KAAMC,SAASC,KAAKC,MAAMC,SAG3CC,MAAML,GAEN4B,GAAgB,GAChBpC,IACM,IAAIc,MAAMN,GApCE,0DAAH,0DAyCnB,OACE,0BAAS7B,UAAWC,IAAQN,KAA5B,UACE,6BAAKuD,EAAU,QAAU,YACzB,cAAC,IAAD,CACAd,cAAe,CAAEmB,MAAO,GAAI7B,SAAU,IACtCW,iBAAkBiB,EAClBhB,SAAU,SAACnB,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCH,EAAcC,EAAQE,EAAWD,IAJnC,SAOG,gBAAGmB,EAAH,EAAGA,aAAcsB,EAAjB,EAAiBA,QAASrB,EAA1B,EAA0BA,OAA1B,OACC,eAAC,IAAD,WACA,sBAAKxC,UAAWC,IAAQyC,QAAxB,UACE,uBAAOC,QAAQ,QAAf,wBACA,cAAC,IAAD,CAAOC,KAAK,QAAQ3E,KAAK,QAAQ4E,GAAG,QAAQW,UAAQ,IACnDK,EAAQN,OAASf,EAAOe,MACxB,qBAAKvD,UAAU,QAAf,SAAwBwC,EAAOe,QAC7B,QAEL,sBAAKvD,UAAWC,IAAQyC,QAAxB,UACE,uBAAOC,QAAQ,WAAf,2BACA,cAAC,IAAD,CAAOC,KAAK,WAAW3E,KAAK,WAAW4E,GAAG,WAAWW,UAAQ,IAC5DK,EAAQnC,UAAYc,EAAOd,SAC3B,qBAAK1B,UAAU,QAAf,SAAwBwC,EAAOd,WAC7B,QAEL,sBAAK1B,UAAWC,IAAQV,QAAxB,WACIgD,GAAgB,wBAAQK,KAAK,SAAb,SAAuBM,EAAU,QAAU,mBAC5DX,GAAgB,mDACjB,wBACEK,KAAK,SACL5C,UAAWC,IAAQ6D,OACnBzD,QAAS+C,EAHX,SAKGF,EAAU,qBAAuB,6CClGjCa,EAJE,WACf,OAAO,cAAC,EAAD,K,iBCOMC,EARa,WAC1B,OACE,yBAAShE,UAAWC,IAAQgE,SAA5B,SACE,sDCCSC,EAJE,WACf,OAAO,cAAC,EAAD,KC6BMC,MAxBf,WACE,IAAM/F,EAAayB,aAAY,SAACtB,GAAD,OAAWA,EAAMoB,KAAKvB,cACrD,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgG,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,OAEAjG,GACF,cAAC,IAAD,CAAOgG,KAAK,QAAZ,SACE,cAAC,EAAD,MAEDhG,GACD,cAAC,IAAD,CAAOgG,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUjE,GAAG,cCjBvBmE,IAASC,OACP,cAAC,IAAD,CAAU/E,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJgF,SAASC,eAAe,U,mBCb1BC,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,QAAU,0BAA0B,OAAS,2B,mBCAjID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,QAAU,6BAA6B,OAAS,8B,mBCAnGD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,+B,mBCAjED,EAAOC,QAAU,CAAC,QAAU,+B,mBCA5BD,EAAOC,QAAU,CAAC,SAAW,yC","file":"static/js/main.f5f831a5.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst localToken = localStorage.getItem('token');\r\nconst localIsLoggedIn = !!localToken;\r\nlet logoutTimer;\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjustedExpirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remainingDuration = adjustedExpirationTime - currentTime;\r\n\r\n    return remainingDuration;\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        token: localToken,\r\n        isLoggedIn: localIsLoggedIn,\r\n    },\r\n    reducers: {\r\n        logout(state) {\r\n            state.token = '';\r\n            state.isLoggedIn = false;\r\n            localStorage.removeItem('token');\r\n            if(logoutTimer) {\r\n                clearTimeout(logoutTimer);\r\n            }\r\n        },\r\n        login(state, action) {\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n            const remainingTime = calculateRemainingTime(action.payload.expirationTime);\r\n\r\n            localStorage.setItem('token', action.payload.token);\r\n            localStorage.setItem('expirationTime', remainingTime);\r\n            \r\n            logoutTimer = setTimeout(() => { \r\n                localStorage.removeItem('token');\r\n            }, remainingTime);\r\n        },\r\n        saveLoginToken(state, action) {\r\n            state.token = action.payload\r\n        }\r\n    }\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default authSlice;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authSlice from \"./auth-slice\";\r\n\r\nconst store = configureStore({\r\n    reducer: { auth: authSlice.reducer }\r\n});\r\n\r\nexport default store;","import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { authActions } from '../../store/auth-slice';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(authActions.logout());\n  }\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n          <li>\n            <Link to='/auth'>Login</Link>\n          </li>)}\n          {isLoggedIn && (\n          <li>\n            <Link to='/profile'>Profile</Link>\n          </li>)}\n          {isLoggedIn && (\n            <li>\n            <button onClick={logoutHandler}>Logout</button>\n          </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import classes from './ProfileForm.module.css';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst ProfileForm = () => {\n  const authToken = useSelector((state) => state.auth.token);\n  const history = useHistory();\n\n  const formValidation = Yup.object().shape({\n    newPassword: Yup.string()\n    .min(8, 'At least 8 characters')\n  })\n\n  const submitHandler = async (values, setSubmitting, resetForm) => {\n    try {\n      await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDXr0-DCQ8hUW6bsSpFmjNHHNokGFOQIBY'\n      , { \n        idToken: authToken,\n        password: values.newPassword,\n        returnSecureToken: false\n      });\n\n      setSubmitting(false);\n      resetForm();\n      history.replace('/');\n    } catch (error) {\n      let errorMessage = 'Authentication failed!';\n\n      if(error.response && error.response.data && error.response.data.error && error.response.data.error.message) {\n        errorMessage = error.response.data.error.message;\n      }\n\n      alert(errorMessage);\n\n      setSubmitting(false);\n      resetForm();\n      throw new Error(errorMessage);\n    }\n\n  }\n\n  return (\n    <Formik\n    initialValues={{ newPassword: '' }}\n    validationSchema={formValidation}\n    onSubmit={(values, { setSubmitting, resetForm }) => {\n      submitHandler(values, setSubmitting, resetForm);\n    }}\n    >{({ isSubmitting, errors}) => (\n      <Form className={classes.form}>\n        <div className={classes.control}>\n          <label htmlFor='new-password'>New Password</label>\n          <Field type='password' id='new-password' name=\"newPassword\" />\n          {errors.newPassword ? (<p className=\"error\">{errors.newPassword}</p>) : null}\n        </div>\n        <div className={classes.action}>\n          {!isSubmitting && <button type=\"submit\">Change Password</button>}\n          {isSubmitting && <p>Sending request...</p>}\n        </div>\n      </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { authActions } from '../../store/auth-slice';\nimport { useHistory } from 'react-router-dom';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const formSquema = Yup.object().shape({\n    email: Yup.string()\n    .email('Email Invalid')\n    .required('Required'),\n    \n    password: Yup.string()\n    .min(8, 'The minimum is 8 characters')\n    .required('Required')\n  })\n\n  const submitHandler = async (values, resetForm, setIsSubmitting) => {\n\n    let url = '';\n    if(isLogin) {\n      url=\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDXr0-DCQ8hUW6bsSpFmjNHHNokGFOQIBY\";\n    } else {\n      url=\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDXr0-DCQ8hUW6bsSpFmjNHHNokGFOQIBY\";\n    }\n\n    try {\n      const response = await axios.post(url\n      , { \n        email: values.email,\n        password: values.password,\n        returnSecureToken: true\n      });\n\n      const expirationTime = new Date(new Date().getTime() + (+response.data.expiresIn * 1000));\n\n      dispatch(authActions.login({token: response.data.idToken, expirationTime: expirationTime.toString()}))\n\n      setIsSubmitting(false);\n      resetForm();\n\n      history.replace('/');\n\n    } catch (error) {\n      let errorMessage = 'Authentication failed!';\n      if(error.response && error.response.data && error.response.data.error && error.response.data.error.message) {\n        errorMessage = error.response.data.error.message;\n      }\n\n      alert(errorMessage);\n\n      setIsSubmitting(false);\n      resetForm();\n      throw new Error(errorMessage);\n    }\n  }\n  \n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <Formik \n      initialValues={{ email: '', password: '' }}\n      validationSchema={formSquema}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        submitHandler(values, resetForm, setSubmitting);\n      }}\n      >\n        {({ isSubmitting, touched, errors }) => (\n          <Form>\n          <div className={classes.control}>\n            <label htmlFor='email'>Your Email</label>\n            <Field type='email' name=\"email\" id='email' required />\n            {touched.email && errors.email ? (\n             <div className=\"error\">{errors.email}</div>\n           ) : null}\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Your Password</label>\n            <Field type='password' name=\"password\" id='password' required />\n            {touched.password && errors.password ? (\n             <div className=\"error\">{errors.password}</div>\n           ) : null}\n          </div>\n          <div className={classes.actions}>\n            {!isSubmitting && <button type='submit'>{isLogin ? 'Login' : 'Create Account'}</button>}\n            {isSubmitting && <p>Sending request...</p>}\n            <button\n              type='button'\n              className={classes.toggle}\n              onClick={switchAuthModeHandler}\n            >\n              {isLogin ? 'Create new account' : 'Login with existing account'}\n            </button>\n          </div>\n        </Form>\n        )}\n      </Formik>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n        {!isLoggedIn && (\n        <Route path='/auth'>\n          <AuthPage />\n        </Route>)}\n        {isLoggedIn && (\n        <Route path='/profile'>\n          <UserProfile />\n        </Route>)}\n        <Route path='*'>\n          <Redirect to='/' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__k9hdt\",\"control\":\"AuthForm_control__2PoP1\",\"actions\":\"AuthForm_actions__MANuH\",\"toggle\":\"AuthForm_toggle__1_DWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__1wEFE\",\"control\":\"ProfileForm_control__1v8E4\",\"action\":\"ProfileForm_action__2WYEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1fZ72\",\"logo\":\"MainNavigation_logo__1yxN8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1BNMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__1aDOY\"};"],"sourceRoot":""}